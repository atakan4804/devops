name: CI + Deploy + Integration Test + SonarQube + Docs

on:
  push:
    branches: ["main"]

jobs:
  build-and-deploy:
    runs-on: self-hosted

    steps:
      - name: Fix permissions before checkout
        run: |
          echo "Fixing leftover root-owned files..."
          docker run --rm -v "${PWD}":/project bash:latest bash -c "chown -R $(id -u):$(id -g) /project || true"

      # --- Checkout & Setup ---
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21

      # --- Build, Test & Coverage ---
      - name: Build with Gradle (incl. JaCoCo)
        run: ./gradlew clean test jacocoTestReport bootJar

      - name: Prepare coverage report for SonarQube
        run: |
          mkdir -p src/coverage
          cp build/reports/jacoco/test/jacocoTestReport.xml src/coverage/

      # --- SonarQube Analysis ---
      - name: Run SonarQube analysis
        run: |
          docker run --rm \
            -e SONAR_HOST_URL="http://10.0.40.193:9000" \
            -e SONAR_TOKEN="sqp_dcf970c3a33631566aabe8542a6bd133a3d8284d" \
            -v "$(pwd)/src:/usr/src" \
            sonarsource/sonar-scanner-cli \
            -Dsonar.projectKey=Team9 \
            -Dsonar.sources=. \
            -Dsonar.java.binaries=. \
            -Dsonar.coverage.jacoco.xmlReportPaths=coverage/jacocoTestReport.xml

      # --- Build & Deploy App ---
      - name: Build Docker image (tag with commit SHA, plus latest)
        run: |
          IMAGE_TAG="devops-app-team9:${{ github.sha }}"
          docker build -t "$IMAGE_TAG" .
          docker tag "$IMAGE_TAG" devops-app-team9:latest

      - name: Stop and remove old container (ignore errors)
        run: |
          docker stop devops-app-team9 || true
          docker rm devops-app-team9 || true

      - name: Run container
        run: |
          docker run -d --name devops-app-team9 \
            --restart unless-stopped \
            -p 8080:8080 devops-app-team9:latest

      # --- Integration Test ---
      - name: Wait & Run integration tests
        run: |
          chmod +x ci/integration-test.sh
          ./ci/integration-test.sh

      # --- Push App image to Registry ---
      - name: Tag and push App image to registry
        run: |
          REG="10.0.40.193:5000"
          IMAGE_TAG="devops-app-team9:${{ github.sha }}"
          REG_IMAGE="$REG/devops-app-team9:${{ github.sha }}"
          docker tag "$IMAGE_TAG" "$REG_IMAGE"
          docker push "$REG_IMAGE"
          docker tag devops-app-team9:latest "$REG/devops-app-team9:latest"
          docker push "$REG/devops-app-team9:latest"

      # --- Documentation Build & Container ---
      - name: Set file and folder permissions to local user
        run: |
          echo "Setting file and folder permissions in case something with user and group root was created in a previous run."
          echo "Using user and group $(id -u):$(id -g) for the whole folder."
          docker run --rm -v "${PWD}":/project bash:latest chown --recursive $(id -u):$(id -g) /project

      - name: Build the documentation
        run: |
          docker run --rm \
            -u "$(id -u):$(id -g)" \
            -v "${PWD}/docs:/docs" \
            -w /docs \
            squidfunk/mkdocs-material build -d build/site

      - name: Create the documentation container
        run: |
          docker image rm my-documentation || true
          docker build -f Dockerfile.nginx -t my-documentation .
          docker image ls --all

      - name: Run the documentation container
        run: |
          docker container stop mydoc || true
          docker container rm mydoc || true
          docker run --name mydoc -d --restart always -p 8082:80 my-documentation

      - name: Test the documentation container
        run: |
          chmod +x ci/doc-integration-test.sh
          ./ci/doc-integration-test.sh

      - name: Clean the documentation container in any case
        if: always()
        run: |
          docker container stop docintegrationtest || true
          docker container rm docintegrationtest || true
          docker container stop mydoc || true
          docker container rm mydoc || true
