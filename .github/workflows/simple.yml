name: CI + Deploy + Integration Test + SonarQube + Docs

on:
  push:
    branches: ["main"]

jobs:
  build-and-deploy:
    runs-on: self-hosted

    steps:
      # --- Checkout & Setup ---
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21

      # --- Build, Test & Coverage ---
      - name: Build with Gradle (incl. JaCoCo)
        run: ./gradlew clean test jacocoTestReport bootJar

      - name: Prepare coverage report for SonarQube
        run: |
          mkdir -p src/coverage
          cp build/reports/jacoco/test/jacocoTestReport.xml src/coverage/

      # --- SonarQube Analysis ---
      - name: Run SonarQube analysis
        run: |
          docker run --rm \
            -e SONAR_HOST_URL="http://10.0.40.193:9000" \
            -e SONAR_TOKEN="sqp_dcf970c3a33631566aabe8542a6bd133a3d8284d" \
            -v "$(pwd)/src:/usr/src" \
            sonarsource/sonar-scanner-cli \
            -Dsonar.projectKey=Team9 \
            -Dsonar.sources=. \
            -Dsonar.java.binaries=. \
            -Dsonar.coverage.jacoco.xmlReportPaths=coverage/jacocoTestReport.xml

      # --- Build & Deploy App ---
      - name: Build Docker image (tag with commit SHA, plus latest)
        run: |
          IMAGE_TAG="devops-app-team9:${{ github.sha }}"
          docker build -t "$IMAGE_TAG" .
          docker tag "$IMAGE_TAG" devops-app-team9:latest

      - name: Stop and remove old container (ignore errors)
        run: |
          docker stop devops-app-team9 || true
          docker rm devops-app-team9 || true

      - name: Run container
        run: |
          docker run -d --name devops-app-team9 \
            --restart unless-stopped \
            -p 8080:8080 devops-app-team9:latest

      # --- Integration Test ---
      - name: Wait & Run integration tests
        run: |
          chmod +x ci/integration-test.sh
          ./ci/integration-test.sh

      # --- Push App image to Registry ---
      - name: Tag and push App image to registry
        run: |
          REG="10.0.40.193:5000"
          IMAGE_TAG="devops-app-team9:${{ github.sha }}"
          REG_IMAGE="$REG/devops-app-team9:${{ github.sha }}"
          docker tag "$IMAGE_TAG" "$REG_IMAGE"
          docker push "$REG_IMAGE"
          docker tag devops-app-team9:latest "$REG/devops-app-team9:latest"
          docker push "$REG/devops-app-team9:latest"

      # --- Lecture 6: Documentation Build & Container ---
      - name: Build MkDocs HTML docs
        run: |
          docker run --rm -v ${{ github.workspace }}/docs:/docs squidfunk/mkdocs-material build

      - name: Build Documentation Docker image
        run: |
          docker build -t devops-docs-team9 -f Dockerfile.docs .

      - name: Stop old docs container
        run: |
          docker stop devops-docs-team9 || true
          docker rm devops-docs-team9 || true

      - name: Run Documentation container
        run: |
          docker run -d --name devops-docs-team9 \
            --restart unless-stopped \
            -p 8081:80 devops-docs-team9

      # --- Push Docs image to Registry ---
      - name: Tag and push Docs image to registry
        run: |
          REG="10.0.40.193:5000"
          IMAGE_TAG="devops-docs-team9:${{ github.sha }}"
          REG_IMAGE="$REG/devops-docs-team9:${{ github.sha }}"
          docker tag "$IMAGE_TAG" "$REG_IMAGE"
          docker push "$REG_IMAGE"

          docker tag devops-docs-team9 "$REG/devops-docs-team9:latest"
          docker push "$REG/devops-docs-team9:latest"

